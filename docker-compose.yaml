version: '3.7'
services:
  db:
    image: mongo:latest
    container_name: ${APP_NAME}-db
    restart: always
    env_file:
      - .env
    volumes:
      - ./docker/db:/data/db
    ports:
      - 27017:27017

  node:
    container_name: ${APP_NAME}-app
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    restart: always
    volumes:
      - .:/home/node/app/
      - ./node_modules:/home/node/app/node_modules
    links:
      - db
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - db
    env_file:
      - .env
    environment:
      WAIT_HOSTS: db:27017

  nginx:
    build:
      context: ./docker/nginx/
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-nginx
    env_file:
      - .env
    volumes:
      - ./docker/logs/nginx/:/var/log/nginx
#      - ./docker/nginx/${DOMAIN}.crt:/etc/nginx/${DOMAIN}.crt
#      - ./docker/nginx/${DOMAIN}.key:/etc/nginx/${DOMAIN}.key
    depends_on:
      - db
      - node
    ports:
      - 80:80

#  sonarqube:
#    container_name: ${APP_NAME}-sonarqube
#    image: sonarqube:latest
#    command: -Dsonar.web.context=/sonarqube
#    expose:
#      - "9000"
#
#  sonarscanner:
#    container_name: ${APP_NAME}-sonar-scanner
#    build:
#      context: .
#      dockerfile: ./docker/sonar-scanner/Dockerfile
#    volumes:
#      - .:/usr/src/
#      - ./sonar-scanner.properties:/usr/lib/sonar-scanner/conf/sonar-scanner.properties
#    links:
#      - sonarqube
#    command: tail -f /dev/null

volumes:
  node_modules:
